###Find the path with lowest sum on a matrix.
###In the 5 by 5 matrix below, the minimal path sum from the top left to
the bottom right, by only moving to the right and down, is indicated
in bold red and is equal to 2427.
###Write a function in python that accept a matrix as parameter (could be a
list of lists) and returns minimal sum.
as complement return also the description of the path that correspond to
the sum determined
in the example should be
[[1,1], [2,1], [2,2], [2,3], [3,3], [3,4], [4,4], [5,4], [5,5]]

 matrix = [[131, 673, 234, 103, 18],
[201, 96, 342, 965, 150],
[630, 803, 746, 422, 111],
[537, 699, 497, 121, 956],
[805, 732, 524, 37, 331]]

def lowestsum(matrix):
  n = len(matrix)
  m = len(matrix[0])
  costs = [[0] * m for i in range(n)]
  costs[0][0] = matrix[0][0]
  for i in range(1, m):
    costs[0][i] = costs[0][i-1] + matrix[0][i]
  for i in range(1, n):
    costs[i][0] = costs[i-1][0] + matrix[i][0]
  for i in range(1, n):
    for j in range(1, m):
      costs[i][j] = min(costs[i-1][j], costs[i][j-1]) + matrix[i][j]
  return costs[n-1][m-1]

lowestsum(matrix)
